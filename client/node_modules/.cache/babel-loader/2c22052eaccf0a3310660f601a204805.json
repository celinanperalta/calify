{"ast":null,"code":"import _regeneratorRuntime from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { client_id, scope } from './config';\n\nvar SpotifyWebApi = require('spotify-web-api-node');\n\nvar accessToken = getTokenFromUrlHash();\nvar spotifyApi = new SpotifyWebApi();\n\nvar spfetch = global.spfetch = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input, init) {\n    var response, ok, status, statusText, json, _ref2, _ref2$error, errorMessage;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (accessToken) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return spfetch.login();\n\n          case 3:\n            if (!init) init = {};\n            if (!init.headers) init.headers = {};\n            init.headers.Authorization = \"Bearer \".concat(accessToken);\n            _context.next = 8;\n            return fetch(input.startsWith('https://') ? input : \"https://api.spotify.com\".concat(input.startsWith('/') ? '' : '/').concat(input), _objectSpread({}, init, {\n              body: typeof init.body === 'object' ? JSON.stringify(init.body) : init.body\n            }));\n\n          case 8:\n            response = _context.sent;\n            ok = response.ok, status = response.status, statusText = response.statusText;\n            json = {};\n            _context.prev = 11;\n            _context.next = 14;\n            return response.json();\n\n          case 14:\n            json = _context.sent;\n            _context.next = 19;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](11);\n\n          case 19:\n            _ref2 = json || {}, _ref2$error = _ref2.error;\n            _ref2$error = _ref2$error === void 0 ? {} : _ref2$error;\n            errorMessage = _ref2$error.message;\n\n            if (!(response.status === 401 && (errorMessage === 'The access token expired' || errorMessage === 'Invalid access token'))) {\n              _context.next = 28;\n              break;\n            }\n\n            _context.next = 25;\n            return fetchTokenFromPopup();\n\n          case 25:\n            accessToken = _context.sent;\n            spotifyApi.setAccessToken(accessToken);\n            return _context.abrupt(\"return\", spfetch(input, init));\n\n          case 28:\n            return _context.abrupt(\"return\", Object.assign(json, {\n              ok: ok,\n              status: status\n            }));\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 17]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nspfetch.login = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = accessToken || getTokenFromUrlHash();\n\n          if (_context2.t0) {\n            _context2.next = 5;\n            break;\n          }\n\n          _context2.next = 4;\n          return fetchTokenFromPopup();\n\n        case 4:\n          _context2.t0 = _context2.sent;\n\n        case 5:\n          return _context2.abrupt(\"return\", accessToken = _context2.t0);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\n\nspfetch.logout = function () {\n  return accessToken = null;\n};\n\nspfetch.isLoggedIn = function () {\n  return !!accessToken;\n};\n\nspfetch.getToken = function () {\n  return accessToken;\n};\n\nexport default spfetch;\n\nfunction getTokenFromUrlHash() {\n  return new URLSearchParams(global.location.hash.slice(1)).get('access_token');\n}\n\nfunction fetchTokenFromPopup() {\n  return _fetchTokenFromPopup.apply(this, arguments);\n}\n\nfunction _fetchTokenFromPopup() {\n  _fetchTokenFromPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var timeout = setTimeout(reject, 20000, new Error('Timeout getting token'));\n              window.addEventListener('message', function onMessage(event) {\n                var data = event.data;\n\n                try {\n                  data = JSON.parse(event.data);\n                } catch (error) {}\n\n                var _ref4 = data || {},\n                    type = _ref4.type,\n                    accessToken = _ref4.accessToken;\n\n                if (type === 'access_token') {\n                  clearTimeout(timeout);\n                  resolve(accessToken);\n                  window.removeEventListener('message', onMessage, false);\n                  global.location.hash = new URLSearchParams([['access_token', accessToken]]).toString();\n                }\n              }, false);\n              var width = 450;\n              var height = 730;\n              var left = window.screen.width / 2 - width / 2;\n              var top = window.screen.height / 2 - height / 2;\n              var url = new URL(window.location.origin);\n              url.pathname = window.location.hostname === 'localhost' ? 'auth.html' : 'auth';\n              url.searchParams.set('client_id', client_id);\n              url.searchParams.set('scope', spotify.scope);\n              window.open(url.toString(), 'Spotify', \"menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=\".concat(width, \", height=\").concat(height, \", top=\").concat(top, \", left=\").concat(left));\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _fetchTokenFromPopup.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/spfetch.js"],"names":["client_id","scope","SpotifyWebApi","require","accessToken","getTokenFromUrlHash","spotifyApi","spfetch","global","input","init","login","headers","Authorization","fetch","startsWith","body","JSON","stringify","response","ok","status","statusText","json","error","errorMessage","message","fetchTokenFromPopup","setAccessToken","Object","assign","logout","isLoggedIn","getToken","URLSearchParams","location","hash","slice","get","Promise","resolve","reject","timeout","setTimeout","Error","window","addEventListener","onMessage","event","data","parse","type","clearTimeout","removeEventListener","toString","width","height","left","screen","top","url","URL","origin","pathname","hostname","searchParams","set","spotify","open"],"mappings":"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","sourcesContent":["import {client_id, scope} from './config';\nvar SpotifyWebApi = require('spotify-web-api-node');\n\nlet accessToken = getTokenFromUrlHash();\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst spfetch = (global.spfetch = async (input, init) => {\n  if (!accessToken) await spfetch.login();\n  if (!init) init = {};\n  if (!init.headers) init.headers = {};\n  init.headers.Authorization = `Bearer ${accessToken}`;\n  const response = await fetch(\n    input.startsWith('https://')\n      ? input\n      : `https://api.spotify.com${input.startsWith('/') ? '' : '/'}${input}`,\n    {\n      ...init,\n      body:\n        typeof init.body === 'object' ? JSON.stringify(init.body) : init.body\n    }\n  );\n\n  const { ok, status, statusText } = response;\n\n  let json = {};\n  try {\n    json = await response.json();\n  } catch (error) {}\n\n  const { error: { message: errorMessage } = {} } = json || {};\n\n  if (\n    response.status === 401 &&\n    (errorMessage === 'The access token expired' ||\n      errorMessage === 'Invalid access token')\n  ) {\n    accessToken = await fetchTokenFromPopup();\n    spotifyApi.setAccessToken(accessToken);\n    return spfetch(input, init);\n  }\n\n  return Object.assign(json, { ok, status });\n});\n\nspfetch.login = async () =>\n  (accessToken =\n    accessToken || getTokenFromUrlHash() || (await fetchTokenFromPopup()));\nspfetch.logout = () => (accessToken = null);\nspfetch.isLoggedIn = () => !!accessToken;\nspfetch.getToken = () => accessToken;\n\nexport default spfetch;\n\nfunction getTokenFromUrlHash() {\n  return new URLSearchParams(global.location.hash.slice(1)).get('access_token');\n}\n\nasync function fetchTokenFromPopup() {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(\n      reject,\n      20000,\n      new Error('Timeout getting token')\n    );\n    window.addEventListener(\n      'message',\n      function onMessage(event) {\n        let data = event.data;\n        try {\n          data = JSON.parse(event.data);\n        } catch (error) {}\n        const { type, accessToken } = data || {};\n        if (type === 'access_token') {\n          clearTimeout(timeout);\n          resolve(accessToken);\n          window.removeEventListener('message', onMessage, false);\n          global.location.hash = new URLSearchParams([\n            ['access_token', accessToken]\n          ]).toString();\n        }\n      },\n      false\n    );\n\n    const width = 450;\n    const height = 730;\n    const left = window.screen.width / 2 - width / 2;\n    const top = window.screen.height / 2 - height / 2;\n\n    const url = new URL(window.location.origin);\n    url.pathname =\n      window.location.hostname === 'localhost' ? 'auth.html' : 'auth';\n    url.searchParams.set('client_id', client_id);\n    url.searchParams.set('scope', spotify.scope);\n\n    window.open(\n      url.toString(),\n      'Spotify',\n      `menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=${width}, height=${height}, top=${top}, left=${left}`\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}