{"ast":null,"code":"import _toConsumableArray from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/Scheduler.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\n\nfunction ListItemLink(props) {\n  return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n    button: true,\n    component: \"a\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar Scheduler = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler(props) {\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scheduler).call(this, props));\n\n    _this.handleAddRow = function () {\n      _this.setState(function (prevState, props) {\n        var row = {\n          name: \"\",\n          id: _this.state.count + 1\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [row])\n        };\n      });\n\n      var newCount = _this.state.count + 1;\n\n      _this.setState({\n        count: newCount\n      });\n    };\n\n    _this.handleDelete = function (id, e) {\n      var copyRows = Object.assign([], _this.state.rows);\n\n      var index = _this.state.rows.findIndex(function (row) {\n        return row.id === id;\n      });\n\n      copyRows.splice(index, 1);\n\n      _this.setState({\n        rows: copyRows\n      });\n    };\n\n    _this.handleChange = function (id, e) {\n      var index = _this.state.rows.findIndex(function (row) {\n        return row.id === id;\n      });\n\n      var row = Object.assign({}, _this.state.rows[index]);\n      var key = e.target.name;\n      row[key] = e.target.value;\n      var rows = Object.assign([], _this.state.rows);\n      rows[index] = row;\n\n      _this.setState({\n        rows: rows\n      });\n    };\n\n    _this.state = {\n      time: new Date().toLocaleString(),\n      rows: [],\n      playlists: props.data,\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.intervalID = setInterval(\n      //     () => this.tick(),\n      //     1000\n      // );\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {// this.setState({\n      //     time: new Date().toLocaleString()\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"Card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleAddRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \"New Row\")), /*#__PURE__*/React.createElement(Paper, {\n        className: \"ScrollList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, this.state.rows && this.state.rows.map(function (d) {\n        return /*#__PURE__*/React.createElement(PlaylistRow, {\n          id: d.id,\n          name: d.name,\n          playlists: _this2.state.playlists,\n          onChange: _this2.handleChange.bind(_this2, d.id),\n          onDelete: _this2.handleDelete.bind(_this2, d.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/Scheduler.js"],"names":["React","makeStyles","List","ListItem","ListItemText","Card","CardContent","Typography","Paper","Button","PlaylistRow","ListItemLink","props","Scheduler","handleAddRow","setState","prevState","row","name","id","state","count","rows","newCount","handleDelete","e","copyRows","Object","assign","index","findIndex","splice","handleChange","key","target","value","time","Date","toLocaleString","playlists","data","clearInterval","intervalID","console","log","map","d","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\n\n\nfunction ListItemLink(props) {\n  return <ListItem button component = \"a\" {...props}/>;\n}\n\nclass Scheduler extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().toLocaleString(),\n            rows: [],\n            playlists: props.data,\n            count: 0\n        };\n    }\n\n    componentDidMount() {\n        // this.intervalID = setInterval(\n        //     () => this.tick(),\n        //     1000\n        // );\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        // this.setState({\n        //     time: new Date().toLocaleString()\n        // });\n    }\n\n    handleAddRow = () => {\n        this.setState((prevState, props) => {\n            const row = {\n                name: \"\",\n                id: this.state.count + 1\n            };\n            return {\n                rows: [...prevState.rows, row]\n            };\n        });\n        const newCount = this.state.count + 1;\n        this.setState({\n            count: newCount\n        })\n    };\n\n    handleDelete = (id, e) => {\n        const copyRows = Object.assign([], this.state.rows);\n        const index = this.state.rows.findIndex((row) => {\n            return row.id === id\n        });\n        copyRows.splice(index, 1);\n        this.setState({\n            rows: copyRows\n        });\n    }\n\n    handleChange = (id, e) => {\n        const index = this.state.rows.findIndex((row) => {\n            return row.id === id\n        });\n\n        const row = Object.assign({}, this.state.rows[index]);\n\n        const key = e.target.name;\n        row[key] = e.target.value;\n\n        const rows = Object.assign([], this.state.rows);\n        rows[index] = row;\n        this.setState({\n            rows: rows\n        });\n    }\n    \n    render() {\n        console.log(this.state);\n\n    return (\n      <Card className=\"Card\">\n        <CardContent>\n            <Button\n                centered\n                variant=\"contained\"\n                color=\"primary\"\n                className={''}\n                onClick={this.handleAddRow}>\n                    New Row\n            </Button>\n        </CardContent>\n        <Paper className=\"ScrollList\">\n            <List component=\"nav\" aria-label=\"main\">\n                    {this.state.rows && (\n                        this.state.rows.map((d) => {\n                            return (<PlaylistRow\n                                id={d.id}\n                                name={d.name}\n                                playlists={this.state.playlists}\n                                onChange={this.handleChange.bind(this, d.id)}\n                                onDelete={this.handleDelete.bind(this, d.id)} />)\n                        }\n                        ))}\n            </List>\n        </Paper>\n        \n       </Card>\n   )};\n}\n\nexport default Scheduler;"]},"metadata":{},"sourceType":"module"}