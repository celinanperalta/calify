{"ast":null,"code":"import _toConsumableArray from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/Scheduler.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\n\nfunction ListItemLink(props) {\n  return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n    button: true,\n    component: \"a\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar Scheduler = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler(props) {\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scheduler).call(this, props));\n\n    _this.handleAddRow = function () {\n      _this.setState(function (prevState, props) {\n        var row = {\n          name: \"\",\n          id: _this.state.count\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [row])\n        };\n      });\n\n      var newCount = _this.state.count + 1;\n\n      _this.setState({\n        count: newCount\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      var items = _this.state.rows.filter(function (item) {\n        return item.id !== id;\n      });\n\n      _this.setState({\n        rows: items\n      });\n\n      var newCount = _this.state.count + 1;\n\n      _this.setState({\n        count: newCount\n      });\n    };\n\n    _this.handleChange = function (name) {//todo: change value in rows\n    };\n\n    _this.state = {\n      time: new Date().toLocaleString(),\n      rows: [],\n      playlists: props.data,\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.intervalID = setInterval(\n      //     () => this.tick(),\n      //     1000\n      // );\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {// this.setState({\n      //     time: new Date().toLocaleString()\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"Card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleAddRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \"New Row\")), /*#__PURE__*/React.createElement(Paper, {\n        className: \"ScrollList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, this.state.rows && this.state.rows.map(function (d) {\n        return /*#__PURE__*/React.createElement(PlaylistRow, {\n          id: d.id,\n          name: d.name,\n          playlists: _this2.state.playlists,\n          onChange: _this2.handleChange,\n          onDelete: _this2.handleDelete,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/Scheduler.js"],"names":["React","makeStyles","List","ListItem","ListItemText","Card","CardContent","Typography","Paper","Button","PlaylistRow","ListItemLink","props","Scheduler","handleAddRow","setState","prevState","row","name","id","state","count","rows","newCount","handleDelete","items","filter","item","handleChange","time","Date","toLocaleString","playlists","data","clearInterval","intervalID","console","log","map","d","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\n\nfunction ListItemLink(props) {\n  return <ListItem button component = \"a\" {...props}/>;\n}\n\nclass Scheduler extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().toLocaleString(),\n            rows: [],\n            playlists: props.data,\n            count: 0\n        };\n    }\n    componentDidMount() {\n        // this.intervalID = setInterval(\n        //     () => this.tick(),\n        //     1000\n        // );\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        // this.setState({\n        //     time: new Date().toLocaleString()\n        // });\n    }\n\n    handleAddRow = () => {\n        this.setState((prevState, props) => {\n            const row = {\n                name: \"\",\n                id: this.state.count\n            };\n            return {\n                rows: [...prevState.rows, row]\n            };\n        });\n        const newCount = this.state.count + 1;\n        this.setState({\n            count: newCount\n        })\n    };\n\n    handleDelete = (id) => {\n         const items = this.state.rows.filter(item => item.id !== id);\n         this.setState({\n             rows: items\n         });\n        const newCount = this.state.count + 1;\n        this.setState({\n            count: newCount\n        })\n     };\n\n    handleChange = (name) => {\n        //todo: change value in rows\n    }\n    \n    render() {\n        console.log(this.state);\n\n    return (\n      <Card className=\"Card\">\n        <CardContent>\n            <Button\n                centered\n                variant=\"contained\"\n                color=\"primary\"\n                className={''}\n                onClick={this.handleAddRow}>\n                    New Row\n            </Button>\n        </CardContent>\n        <Paper className=\"ScrollList\">\n            <List component=\"nav\" aria-label=\"main\">\n                    {this.state.rows && (\n                        this.state.rows.map((d) => \n                            <PlaylistRow\n                                id={d.id}\n                                name={d.name}\n                                playlists={this.state.playlists}\n                                onChange={this.handleChange}\n                                onDelete={this.handleDelete} />\n                        ))}\n            </List>\n        </Paper>\n        \n       </Card>\n   )};\n}\n\nexport default Scheduler;"]},"metadata":{},"sourceType":"module"}