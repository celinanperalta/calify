{"ast":null,"code":"import _objectSpread from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/ScheduleTable.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nexport default function ScheduleTable() {\n  var _React$useState = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Start Time',\n      field: 'start'\n    }, {\n      title: 'End Time',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Schedule\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.push(newData);\n              return _objectSpread({}, prevState, {\n                data: data\n              });\n            });\n          }, 600);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            if (oldData) {\n              setState(function (prevState) {\n                var data = _toConsumableArray(prevState.data);\n\n                data[data.indexOf(oldData)] = newData;\n                return _objectSpread({}, prevState, {\n                  data: data\n                });\n              });\n            }\n          }, 600);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.splice(data.indexOf(oldData), 1);\n              return _objectSpread({}, prevState, {\n                data: data\n              });\n            });\n          }, 600);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  });\n}","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/ScheduleTable.js"],"names":["React","MaterialTable","ScheduleTable","useState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","state","setState","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\nexport default function ScheduleTable() {\n    const [state, setState] = React.useState({\n        columns: [{\n                title: 'Name',\n                field: 'name'\n            },\n            {\n                title: 'Start Time',\n                field: 'start'\n            },\n            {\n                title: 'End Time',\n                field: 'birthYear',\n                type: 'numeric'\n            },\n            {\n                title: 'Birth Place',\n                field: 'birthCity',\n                lookup: {\n                    34: 'İstanbul',\n                    63: 'Şanlıurfa'\n                },\n            },\n        ],\n        data: [{\n                name: 'Mehmet',\n                surname: 'Baran',\n                birthYear: 1987,\n                birthCity: 63\n            },\n            {\n                name: 'Zerya Betül',\n                surname: 'Baran',\n                birthYear: 2017,\n                birthCity: 34,\n            },\n        ],\n    });\n\n    return ( <\n        MaterialTable title = \"Schedule\"\n        columns = {\n            state.columns\n        }\n        data = {\n            state.data\n        }\n        editable = {\n            {\n                onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                                const data = [...prevState.data];\n                                data.push(newData);\n                                return {\n                                    ...prevState,\n                                    data\n                                };\n                            });\n                        }, 600);\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve();\n                            if (oldData) {\n                                setState((prevState) => {\n                                    const data = [...prevState.data];\n                                    data[data.indexOf(oldData)] = newData;\n                                    return {\n                                        ...prevState,\n                                        data\n                                    };\n                                });\n                            }\n                        }, 600);\n                    }),\n                onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                                const data = [...prevState.data];\n                                data.splice(data.indexOf(oldData), 1);\n                                return {\n                                    ...prevState,\n                                    data\n                                };\n                            });\n                        }, 600);\n                    }),\n            }\n        }\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}