{"ast":null,"code":"// import React from 'react';\n// import MaterialTable from 'material-table';\n// export default function ScheduleTable() {\n//     const [state, setState] = React.useState({\n//         columns: [{\n//                 title: 'Name',\n//                 field: 'name'\n//             },\n//             {\n//                 title: 'Start Time',\n//                 field: 'start',\n//                 type: 'time'\n//             },\n//             {\n//                 title: 'End Time',\n//                 field: 'end',\n//                 type: 'time'\n//             }\n//         ],\n//         data: [{\n//                 name: 'Mehmet',\n//                 start: '12:00',\n//                 end: '13:00',\n//             },\n//             {\n//                 name: 'Zerya Betül',\n//                 start: '14:00',\n//                 end: '15:00',\n//             },\n//         ],\n//     });\n//     return (\n//         <\n//         MaterialTable title = \"Schedule\"\n//         columns = {\n//             state.columns\n//         }\n//         data = {\n//             state.data\n//         }\n//         editable = {\n//             {\n//                 onRowAdd: (newData) =>\n//                     new Promise((resolve) => {\n//                         setTimeout(() => {\n//                             resolve();\n//                             setState((prevState) => {\n//                                 const data = [...prevState.data];\n//                                 data.push(newData);\n//                                 return {\n//                                     ...prevState,\n//                                     data\n//                                 };\n//                             });\n//                         }, 600);\n//                     }),\n//                 onRowUpdate: (newData, oldData) =>\n//                     new Promise((resolve) => {\n//                         setTimeout(() => {\n//                             resolve();\n//                             if (oldData) {\n//                                 setState((prevState) => {\n//                                     const data = [...prevState.data];\n//                                     data[data.indexOf(oldData)] = newData;\n//                                     return {\n//                                         ...prevState,\n//                                         data\n//                                     };\n//                                 });\n//                             }\n//                         }, 600);\n//                     }),\n//                 onRowDelete: (oldData) =>\n//                     new Promise((resolve) => {\n//                         setTimeout(() => {\n//                             resolve();\n//                             setState((prevState) => {\n//                                 const data = [...prevState.data];\n//                                 data.splice(data.indexOf(oldData), 1);\n//                                 return {\n//                                     ...prevState,\n//                                     data\n//                                 };\n//                             });\n//                         }, 600);\n//                     }),\n//             }\n//         }\n//         />\n//     );\n// }","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/spotify-react-app-template/src/components/ScheduleTable.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import MaterialTable from 'material-table';\n\n// export default function ScheduleTable() {\n//     const [state, setState] = React.useState({\n//         columns: [{\n//                 title: 'Name',\n//                 field: 'name'\n//             },\n//             {\n//                 title: 'Start Time',\n//                 field: 'start',\n//                 type: 'time'\n//             },\n//             {\n//                 title: 'End Time',\n//                 field: 'end',\n//                 type: 'time'\n//             }\n//         ],\n//         data: [{\n//                 name: 'Mehmet',\n//                 start: '12:00',\n//                 end: '13:00',\n//             },\n//             {\n//                 name: 'Zerya Betül',\n//                 start: '14:00',\n//                 end: '15:00',\n//             },\n//         ],\n//     });\n\n//     return (\n//         <\n//         MaterialTable title = \"Schedule\"\n//         columns = {\n//             state.columns\n//         }\n//         data = {\n//             state.data\n//         }\n//         editable = {\n//             {\n//                 onRowAdd: (newData) =>\n//                     new Promise((resolve) => {\n//                         setTimeout(() => {\n//                             resolve();\n//                             setState((prevState) => {\n//                                 const data = [...prevState.data];\n//                                 data.push(newData);\n//                                 return {\n//                                     ...prevState,\n//                                     data\n//                                 };\n//                             });\n//                         }, 600);\n//                     }),\n//                 onRowUpdate: (newData, oldData) =>\n//                     new Promise((resolve) => {\n//                         setTimeout(() => {\n//                             resolve();\n//                             if (oldData) {\n//                                 setState((prevState) => {\n//                                     const data = [...prevState.data];\n//                                     data[data.indexOf(oldData)] = newData;\n//                                     return {\n//                                         ...prevState,\n//                                         data\n//                                     };\n//                                 });\n//                             }\n//                         }, 600);\n//                     }),\n//                 onRowDelete: (oldData) =>\n//                     new Promise((resolve) => {\n//                         setTimeout(() => {\n//                             resolve();\n//                             setState((prevState) => {\n//                                 const data = [...prevState.data];\n//                                 data.splice(data.indexOf(oldData), 1);\n//                                 return {\n//                                     ...prevState,\n//                                     data\n//                                 };\n//                             });\n//                         }, 600);\n//                     }),\n//             }\n//         }\n//         />\n//     );\n// }"]},"metadata":{},"sourceType":"module"}