{"ast":null,"code":"import _toConsumableArray from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/celinaperalta/Documents/SideProjects/calify/src/components/Scheduler.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\nimport UniqueId from 'react-html-id';\n\nfunction ListItemLink(props) {\n  return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n    button: true,\n    component: \"a\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar Scheduler = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler(props) {\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scheduler).call(this, props));\n\n    _this.sortRowsByTime = function () {\n      var rows = _this.state.rows.sort(function (a, b) {\n        var s = a.start_time.localeCompare(b.start_time);\n        var e = a.start_time.localeCompare(b.start_time);\n        return s || e;\n      });\n\n      _this.setState({\n        rows: rows\n      });\n    };\n\n    _this.handleGetPlaying = function () {\n      // this.sortRowsByTime();\n      var t = new Date().toTimeString().split(' ')[0].substr(0, 5);\n\n      var curr = _this.state.rows.findIndex(function (row) {\n        return t >= row.start_time && t <= row.end_time;\n      });\n\n      console.log(_this.state.rows[curr]);\n\n      _this.setState({\n        curr: curr\n      });\n    };\n\n    _this.handleAddRow = function () {\n      _this.setState(function (prevState, props) {\n        var row = {\n          id: _this.state.count,\n          name: \"\",\n          uri: \"\",\n          start_time: \"12:00\",\n          end_time: \"12:30\"\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [row])\n        };\n      });\n\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.handleDelete = function (id, e) {\n      var copyRows = Object.assign([], _this.state.rows);\n\n      var index = _this.state.rows.findIndex(function (row) {\n        return row.id === id;\n      });\n\n      copyRows.splice(index, 1);\n\n      _this.setState({\n        rows: copyRows\n      });\n    };\n\n    _this.handleChange = function (id, e) {\n      var index = _this.state.rows.findIndex(function (row) {\n        return row.id === id;\n      });\n\n      var row = Object.assign({}, _this.state.rows[index]);\n      var key = e.target.name;\n      row[key] = e.target.value;\n      console.log(e.target.type);\n\n      if (e.target.name === \"name\") {\n        var playlist = _this.state.playlists.findIndex(function (row) {\n          return row.name === e.target.value;\n        });\n\n        console.log(_this.state.playlists);\n        row[\"uri\"] = _this.state.playlists[playlist].external_urls.spotify;\n      } // console.log(this.state.playlists);\n      // if (e.target.type === \"time\") {\n      //     const start = parseInt(row.start_time);\n      //     const end = parseInt(row.end_time);\n      //     if (end < start) {\n      //         row.end_time = row.start_time;\n      //     }\n      // }\n\n\n      var rows = Object.assign([], _this.state.rows);\n      rows[index] = row;\n\n      _this.setState({\n        rows: rows\n      });\n\n      console.log(_this.state.rows);\n    };\n\n    _this.state = {\n      time: new Date(),\n      rows: [],\n      playlists: props.data,\n      curr: null,\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      this.setState({\n        time: new Date()\n      });\n    } //idk why she aint work but ok\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"Scheduler\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        gutterTop: true,\n        centered: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, \" \", this.state.time.toLocaleTimeString(), \" \"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleAddRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, \"New Row\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.sortRowsByTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, \"Sort\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleGetPlaying,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, \"Get Next\")))), /*#__PURE__*/React.createElement(Paper, {\n        className: \"ScrollList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, this.state.rows && this.state.rows.map(function (d) {\n        return /*#__PURE__*/React.createElement(PlaylistRow, {\n          id: d.id,\n          name: d.name,\n          start_time: d.start_time,\n          end_time: d.end_time,\n          playlists: _this3.state.playlists,\n          onChange: _this3.handleChange.bind(_this3, d.id),\n          onDelete: _this3.handleDelete.bind(_this3, d.id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 37\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/calify/src/components/Scheduler.js"],"names":["React","makeStyles","List","ListItem","ListItemText","Card","CardContent","Typography","Paper","Button","Grid","PlaylistRow","UniqueId","ListItemLink","props","Scheduler","sortRowsByTime","rows","state","sort","a","b","s","start_time","localeCompare","e","setState","handleGetPlaying","t","Date","toTimeString","split","substr","curr","findIndex","row","end_time","console","log","handleAddRow","prevState","id","count","name","uri","handleDelete","copyRows","Object","assign","index","splice","handleChange","key","target","value","type","playlist","playlists","external_urls","spotify","time","data","intervalID","setInterval","tick","clearInterval","toLocaleTimeString","map","d","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\nimport UniqueId from 'react-html-id';\n\nfunction ListItemLink(props) {\n  return <ListItem button component = \"a\" {...props}/>;\n}\n\nclass Scheduler extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date(),\n            rows: [],\n            playlists: props.data,\n            curr: null,\n            count: 0\n        };\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time: new Date()\n        });\n    }\n\n    //idk why she aint work but ok\n    sortRowsByTime = () => {\n        const rows = this.state.rows.sort((a, b) => {\n            const s = a.start_time.localeCompare(b.start_time);\n            const e = a.start_time.localeCompare(b.start_time);\n\n            return s || e;\n        });\n\n        this.setState({ rows: rows });\n    }\n\n\n    handleGetPlaying = () => {\n        \n        // this.sortRowsByTime();\n\n        const t = new Date().toTimeString().split(' ')[0].substr(0, 5);\n\n        const curr = this.state.rows.findIndex((row) => {\n            return t >= row.start_time && t <= row.end_time;\n        });\n\n        console.log(this.state.rows[curr]);\n\n        this.setState({\n            curr: curr\n        })\n\n    }\n\n    handleAddRow = () => {\n        this.setState((prevState, props) => {\n            const row = {\n                id: this.state.count,\n                name: \"\",\n                uri: \"\",\n                start_time: \"12:00\",\n                end_time: \"12:30\"\n            };\n            return {\n                rows: [...prevState.rows, row]\n            };\n        });\n        this.setState({count: (this.state.count + 1)})\n    };\n\n    handleDelete = (id, e) => {\n        const copyRows = Object.assign([], this.state.rows);\n        const index = this.state.rows.findIndex((row) => {\n            return row.id === id\n        });\n        copyRows.splice(index, 1);\n        this.setState({\n            rows: copyRows\n        });\n    }\n\n    handleChange = (id, e) => {\n        const index = this.state.rows.findIndex((row) => {\n            return row.id === id\n        });\n\n        const row = Object.assign({}, this.state.rows[index]);\n\n        const key = e.target.name;\n        row[key] = e.target.value;\n\n        console.log(e.target.type);\n\n        if (e.target.name === \"name\") {\n            const playlist = this.state.playlists.findIndex((row) => {\n                return row.name === e.target.value\n            });\n            console.log(this.state.playlists);\n            row[\"uri\"] = this.state.playlists[playlist].external_urls.spotify;\n        }\n\n        // console.log(this.state.playlists);\n\n        // if (e.target.type === \"time\") {\n        //     const start = parseInt(row.start_time);\n        //     const end = parseInt(row.end_time);\n        //     if (end < start) {\n        //         row.end_time = row.start_time;\n        //     }\n        // }\n\n        const rows = Object.assign([], this.state.rows);\n        rows[index] = row;\n\n        this.setState({\n            rows: rows\n        });\n\n        console.log(this.state.rows);\n\n    }\n    \n    render() {\n    return (\n      <Card className=\"Scheduler\">\n            <CardContent>\n                <Typography gutterTop centered variant=\"h5\" component=\"h2\"> {this.state.time.toLocaleTimeString()} </Typography>\n                <Grid container spacing={3}> \n                    <Grid item xs={3}>\n                        <Button\n                            centered\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={''}\n                            onClick={this.handleAddRow}>\n                            New Row\n                        </Button>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button\n                            centered\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={''}\n                            onClick={this.sortRowsByTime}>\n                            Sort\n                        </Button>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button\n                            centered\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={''}\n                            onClick={this.handleGetPlaying}>\n                            Get Next\n                        </Button>\n                    </Grid>\n                </Grid>\n        </CardContent> \n        < Paper className = \"ScrollList\" >\n            <List component=\"nav\" aria-label=\"main\">\n                    {this.state.rows && (\n                        this.state.rows.map((d) => {\n                            return (<PlaylistRow\n                                id={d.id}\n                                name={d.name}\n                                start_time={d.start_time}\n                                end_time={d.end_time}\n                                playlists={this.state.playlists}\n                                onChange={this.handleChange.bind(this, d.id)}\n                                onDelete={this.handleDelete.bind(this, d.id)} />)\n                        }))}\n            </List>\n            </Paper>\n       </Card>\n   )};\n}\n\nexport default Scheduler;"]},"metadata":{},"sourceType":"module"}