{"ast":null,"code":"import _toConsumableArray from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/celinaperalta/Documents/SideProjects/calify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/celinaperalta/Documents/SideProjects/calify/src/components/Scheduler.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\nimport UniqueId from 'react-html-id';\n\nfunction ListItemLink(props) {\n  return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n    button: true,\n    component: \"a\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar Scheduler = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler(props) {\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scheduler).call(this, props));\n\n    _this.handleGetPlaying = function () {\n      var rows = _this.state.rows.sort(function (a, b) {\n        return parseInt(a.start_time) - parseInt(b.start_time);\n      });\n\n      var t = _this.state.time;\n      console.log(\"TIME: \" + t);\n\n      _this.state.rows.map(function (d) {\n        console.log(d.name);\n        console.log(d.uri);\n        console.log(d.start_time);\n        console.log(d.end_time);\n      });\n\n      var curr = _this.state.rows.findIndex(function (row) {\n        return t >= row.start_time && t <= row.end_time;\n      });\n\n      _this.setState({\n        curr: rows[curr]\n      });\n\n      console.log(curr);\n    };\n\n    _this.handleAddRow = function () {\n      _this.setState(function (prevState, props) {\n        var row = {\n          id: _this.state.count,\n          name: \"\",\n          uri: \"\",\n          start_time: \"12:00\",\n          end_time: \"12:30\"\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [row])\n        };\n      });\n\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.handleDelete = function (id, e) {\n      var copyRows = Object.assign([], _this.state.rows);\n\n      var index = _this.state.rows.findIndex(function (row) {\n        return row.id === id;\n      });\n\n      copyRows.splice(index, 1);\n\n      _this.setState({\n        rows: copyRows\n      });\n    };\n\n    _this.handleChange = function (id, e) {\n      var index = _this.state.rows.findIndex(function (row) {\n        return row.id === id;\n      });\n\n      var row = Object.assign({}, _this.state.rows[index]);\n      var key = e.target.name;\n      row[key] = e.target.value;\n\n      if (e.target.type === \"name\") {\n        var playlist = _this.state.playlists.findIndex(function (row) {\n          return row.name === e.target.value;\n        });\n\n        row[\"uri\"] = _this.state.playlists[playlist].external_urls.spotify;\n      } // if (e.target.type === \"time\") {\n      //     const start = parseInt(row.start_time);\n      //     const end = parseInt(row.end_time);\n      //     if (end < start) {\n      //         row.end_time = row.start_time;\n      //     }\n      // }\n\n\n      var rows = Object.assign([], _this.state.rows);\n      rows[index] = row;\n\n      _this.setState({\n        rows: rows\n      });\n\n      console.log(_this.state.rows);\n    };\n\n    _this.handleUpdate = function () {\n      var rows = _this.state.rows.sort(function (a, b) {\n        return parseInt(a.start_time) - parseInt(b.start_time);\n      });\n\n      _this.setState({\n        rows: rows\n      });\n    };\n\n    _this.state = {\n      time: 0,\n      rows: [],\n      playlists: props.data,\n      curr: null,\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"Scheduler\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleAddRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, \"New Row\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"Sort\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        centered: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: '',\n        onClick: this.handleGetPlaying,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, \"Get Next\")))), /*#__PURE__*/React.createElement(Paper, {\n        className: \"ScrollList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, this.state.rows && this.state.rows.map(function (d) {\n        return /*#__PURE__*/React.createElement(PlaylistRow, {\n          id: d.id,\n          name: d.name,\n          start_time: d.start_time,\n          end_time: d.end_time,\n          playlists: _this2.state.playlists,\n          onChange: _this2.handleChange.bind(_this2, d.id),\n          onDelete: _this2.handleDelete.bind(_this2, d.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 37\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/celinaperalta/Documents/SideProjects/calify/src/components/Scheduler.js"],"names":["React","makeStyles","List","ListItem","ListItemText","Card","CardContent","Typography","Paper","Button","Grid","PlaylistRow","UniqueId","ListItemLink","props","Scheduler","handleGetPlaying","rows","state","sort","a","b","parseInt","start_time","t","time","console","log","map","d","name","uri","end_time","curr","findIndex","row","setState","handleAddRow","prevState","id","count","handleDelete","e","copyRows","Object","assign","index","splice","handleChange","key","target","value","type","playlist","playlists","external_urls","spotify","handleUpdate","data","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport '../App.css';\nimport PlaylistRow from './PlaylistRow';\nimport UniqueId from 'react-html-id';\n\nfunction ListItemLink(props) {\n  return <ListItem button component = \"a\" {...props}/>;\n}\n\nclass Scheduler extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: 0,\n            rows: [],\n            playlists: props.data,\n            curr: null,\n            count: 0\n        };\n    }\n\n\n    handleGetPlaying = () => {\n        const rows = this.state.rows.sort((a, b) => parseInt(a.start_time) - parseInt(b.start_time));\n\n        const t = this.state.time;\n\n        console.log(\"TIME: \" + t)\n\n        this.state.rows.map((d) => {\n            console.log(d.name);\n            console.log(d.uri);\n            console.log(d.start_time);\n            console.log(d.end_time);\n        })\n\n        const curr = this.state.rows.findIndex((row) => {\n            return t >= row.start_time && t <= row.end_time;\n        });\n\n        this.setState({\n            curr: rows[curr]\n        })\n\n        console.log(curr);\n    }\n\n    handleAddRow = () => {\n        this.setState((prevState, props) => {\n            const row = {\n                id: this.state.count,\n                name: \"\",\n                uri: \"\",\n                start_time: \"12:00\",\n                end_time: \"12:30\"\n            };\n            return {\n                rows: [...prevState.rows, row]\n            };\n        });\n        this.setState({count: (this.state.count + 1)})\n    };\n\n    handleDelete = (id, e) => {\n        const copyRows = Object.assign([], this.state.rows);\n        const index = this.state.rows.findIndex((row) => {\n            return row.id === id\n        });\n        copyRows.splice(index, 1);\n        this.setState({\n            rows: copyRows\n        });\n    }\n\n    handleChange = (id, e) => {\n        const index = this.state.rows.findIndex((row) => {\n            return row.id === id\n        });\n\n        const row = Object.assign({}, this.state.rows[index]);\n\n        const key = e.target.name;\n        row[key] = e.target.value;\n\n        if (e.target.type === \"name\") {\n            const playlist = this.state.playlists.findIndex((row) => {\n                return row.name === e.target.value\n            });\n            row[\"uri\"] = this.state.playlists[playlist].external_urls.spotify;\n        }\n\n        // if (e.target.type === \"time\") {\n        //     const start = parseInt(row.start_time);\n        //     const end = parseInt(row.end_time);\n        //     if (end < start) {\n        //         row.end_time = row.start_time;\n        //     }\n        // }\n\n        const rows = Object.assign([], this.state.rows);\n        rows[index] = row;\n\n        this.setState({\n            rows: rows\n        });\n\n        console.log(this.state.rows);\n\n    }\n\n    handleUpdate = () => {\n        const rows = this.state.rows.sort((a, b) => parseInt(a.start_time) - parseInt(b.start_time));\n         this.setState({\n             rows: rows\n         });\n    }\n    \n    render() {\n    return (\n      <Card className=\"Scheduler\">\n            <CardContent>\n                <Grid container spacing={3}> \n                    <Grid item xs={3}>\n                        <Button\n                            centered\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={''}\n                            onClick={this.handleAddRow}>\n                            New Row\n                        </Button>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button\n                            centered\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={''}\n                            onClick={this.handleUpdate}>\n                            Sort\n                        </Button>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button\n                            centered\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={''}\n                            onClick={this.handleGetPlaying}>\n                            Get Next\n                        </Button>\n                    </Grid>\n                </Grid>\n        </CardContent> \n        < Paper className = \"ScrollList\" >\n            <List component=\"nav\" aria-label=\"main\">\n                    {this.state.rows && (\n                        this.state.rows.map((d) => {\n                            return (<PlaylistRow\n                                id={d.id}\n                                name={d.name}\n                                start_time={d.start_time}\n                                end_time={d.end_time}\n                                playlists={this.state.playlists}\n                                onChange={this.handleChange.bind(this, d.id)}\n                                onDelete={this.handleDelete.bind(this, d.id)} />)\n                        }))}\n            </List>\n            </Paper>\n       </Card>\n   )};\n}\n\nexport default Scheduler;"]},"metadata":{},"sourceType":"module"}